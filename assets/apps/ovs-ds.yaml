apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: ovs
  name: ovs
  namespace: openshift-sdn
spec:
  selector:
    matchLabels:
      app: ovs
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ovs
        component: network
        openshift.io/component: network
        type: infra
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: network.operator.openshift.io/external-openvswitch
                operator: DoesNotExist
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -euo pipefail
          export SYSTEMD_IGNORE_CHROOT=yes

          # systemctl cannot be used in a separate PID namespace to reach
          # the systemd running in PID 1. Therefore we need to use the dbus API
          systemctl_restart(){
            gdbus call \
              --system \
              --dest org.freedesktop.systemd1 \
              --object-path /org/freedesktop/systemd1/unit/"$(svc_encode_name ${1})"_2eservice \
              --method org.freedesktop.systemd1.Unit.Restart "replace"
          }
          svc_encode_name(){
            # systemd encodes some characters, so far we only need to encode
            # the character "-" but there may be more in the future.
            echo "${1//-/_2d}"
          }

            # In some very strange corner cases, the owner for /run/openvswitch
            # can be wrong, so we need to clean up and restart.
            ovs_uid=$(chroot /host id -u openvswitch)
            ovs_gid=$(chroot /host id -g openvswitch)
            chown -R "${ovs_uid}:${ovs_gid}" /run/openvswitch
            if [[ ! -S /run/openvswitch/db.sock ]]; then
              systemctl_restart ovsdb-server
            fi
            # We need to explicitly exit on SIGTERM, see https://github.com/openshift/cluster-dns-operator/issues/65
            function quit {
                exit 0
            }
            trap quit SIGTERM
            # Don't need to worry about restoring flows; this can only change if we've rebooted
            tail --pid=$BASHPID -F /host/var/log/openvswitch/ovs-vswitchd.log /host/var/log/openvswitch/ovsdb-server.log &
            wait
        image: quay.io/openshift/okd-content@sha256:71dbab00e9803acb3bcf859607d9d3ed445b6f3a063ecedd6b3ea02a7a8fdd80
        imagePullPolicy: IfNotPresent
        name: openvswitch
        resources:
          requests:
            cpu: 15m
            memory: 400Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /lib/modules
          name: host-modules
          readOnly: true
        - mountPath: /run
          name: host-run
        - mountPath: /sys
          name: host-sys
          readOnly: true
        - mountPath: /etc/openvswitch
          name: host-config-openvswitch
        - mountPath: /host
          name: host-slash
          readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: sdn
      serviceAccountName: sdn
      terminationGracePeriodSeconds: 30
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /lib/modules
          type: ""
        name: host-modules
      - hostPath:
          path: /run
          type: ""
        name: host-run
      - hostPath:
          path: /sys
          type: ""
        name: host-sys
      - hostPath:
          path: /var/lib/openvswitch
          type: DirectoryOrCreate
        name: host-config-openvswitch
      - hostPath:
          path: /
          type: ""
        name: host-slash
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
