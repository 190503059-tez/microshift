---
# install-logging tasks

- name: rpm tasks
  block:
    - name: install prometheus & grafana
      ansible.builtin.dnf:
        name: "{{ logging_packages }}"
        state: present
        update_cache: true
  when: (ansible_distribution == "CentOS") or (ansible_distribution == "RedHat") or (ansible_distribution == "Fedora")

- name: copy prometheus config
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    backup: true

- name: start and enable prometheus & grafana service(s)
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  loop: "{{ logging_services }}"

- name: get content of microshift grafana dashboard
  ansible.builtin.set_fact:
    microshift_dashboard: "{{ lookup('ansible.builtin.file', 'microshift_perf.json') }}"

- name: create prometheus datasource in grafana
  ansible.builtin.uri:
    url: http://{{ ansible_default_ipv4.address }}:{{ grafana_port }}/api/datasources
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    status_code: [200, 409]
    force_basic_auth: yes
    method: POST
    body_format: json
    headers:
      Accept: application/json
      Content-Type: application/json
    body: "{{ lookup('ansible.builtin.file', 'prometheus_datasource.json') }}"

- name: create microshift perf dashboard in grafana
  ansible.builtin.uri:
    url: http://{{ ansible_default_ipv4.address }}:{{ grafana_port }}/api/dashboards/db
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    force_basic_auth: yes
    method: POST
    body_format: json
    headers:
      Accept: application/json
      Content-Type: application/json
    body: "{{ lookup('ansible.builtin.template', 'grafana_dashboard.json.j2') }}"
